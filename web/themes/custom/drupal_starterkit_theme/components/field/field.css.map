{"version":3,"file":"components/field/field.css","mappings":"AAIE;EACE;EACA;AAHJ;ACyEI;EDxEF;IAKI;EAFJ;AACF;AAII;EACE,cEgBK;EFfL;AAFN;ACgEI;EDhEA;IAKI;EADN;AACF,C","sources":["webpack://drupal_starterkit_theme/./components/field/field.scss","webpack://drupal_starterkit_theme/./node_modules/bootstrap/scss/mixins/_breakpoints.scss","webpack://drupal_starterkit_theme/./src/scss/base/_variables.scss"],"sourcesContent":["@import \"../../src/scss/init\";\n\n.node-type--certificate {\n\n  .field--item {\n    padding: 24px;\n    border: solid 1px $gray-100;\n\n    @include media-breakpoint-down(lg) {\n      padding: 16px;\n    }\n\n    .field__label {\n      color: $gray-500;\n      margin-bottom: 16px;\n\n      @include media-breakpoint-down(lg) {\n        margin-bottom: 8px;\n      }\n    }\n  }\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl xxl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n","// Variables\n// Variables should follow the `$component-state-property-size` formula for\n// consistent naming. Ex: $nav-link-disabled-color and\n// $modal-content-box-shadow-xs.\n\n// To customize\n// - Copy paste the variable from node_modules/bootstrap/scss/_variables.scss\n// @see: https://github.com/twbs/bootstrap/blob/main/scss/_variables.scss\n// - Change the value and remove the !default flag.\n// e.g.\n// $body-bg: #000;\n// $body-color: $gray-100;\n\n\n// Litera 5.3.3\n// Bootswatch\n\n$theme: \"litera\" !default;\n\n//\n// Color system\n//\n\n$white: #fff !default;\n$gray-50: #EBECEF !default;\n$gray-100: #D5D7DD !default;\n$gray-200: #EBECEF !default;\n$gray-300: #ddd !default;\n$gray-400: #ced4da !default;\n$gray-500: #7A7D85 !default;\n$gray-600: #868e96 !default;\n$gray-700: #495057 !default;\n$gray-800: #343a40 !default;\n$gray-900: #212529 !default;\n$black: #000 !default;\n$dune: #373737 !default;\n\n$blue: #4582ec !default;\n$indigo: #6610f2 !default;\n$purple: #6f42c1 !default;\n$pink: #e83e8c !default;\n$red: #d9534f !default;\n$orange: #fd7e14 !default;\n$yellow: #f0ad4e !default;\n$green: #02b875 !default;\n$teal: #20c997 !default;\n$cyan: #17a2b8 !default;\n\n$accent-color: #F64809 !default;\n$primary: $blue !default;\n$secondary: $gray-500 !default;\n$success: $green !default;\n$info: $cyan !default;\n$warning: $yellow !default;\n$danger: $red !default;\n$light: $gray-100 !default;\n$dark: $gray-800 !default;\n\n$min-contrast-ratio: 1.85 !default;\n\n// Header\n\n$bg-header: $gray-200 !default;\n$font-size-header: 1rem !default;\n$font-weight-header: 500 !default;\n\n\n// Body\n\n$body-color: $dune !default;\n\n// Fonts\n\n// stylelint-disable value-keyword-case\n$font-tektur: \"Tektur\", sans-serif;\n$font-family-sans-serif: $font-tektur;\n$font-family-serif: Georgia, Cambria, \"Times New Roman\", Times, serif !default;\n// stylelint-enable\n\n$font-size-base: 1.1rem !default;\n$headings-font-weight: 700 !default;\n$font-weight-bold: 700 !default;\n\n// Tables\n\n$table-border-color: rgba(0, 0, 0, .1) !default;\n\n$table-bg-scale: 0% !default;\n\n// Buttons\n\n$input-btn-padding-y: .5rem !default;\n$input-btn-padding-x: 1.1rem !default;\n$btn-font-family: $font-family-sans-serif !default;\n$btn-font-size: .875rem !default;\n$btn-font-size-sm: .688rem !default;\n\n$btn-border-radius: 8px !default;\n$btn-border-radius-lg: 2.688em !default;\n$btn-border-radius-sm: .844em !default;\n\n// Forms\n\n$input-border-color: rgba(0, 0, 0, .1) !default;\n$input-group-addon-bg: $gray-200 !default;\n\n// Navbar\n\n// Tooltips\n\n$tooltip-font-size: 11px !default;\n\n// Badges\n\n$badge-font-weight: 400 !default;\n$badge-padding-y: .6em !default;\n$badge-padding-x: 1.2em !default;\n\n// Alerts\n\n$alert-border-width: 0 !default;\n\n"],"names":[],"sourceRoot":""}